Typs of positioning 
static positioning - relative positioning - absolute positioning - fixed positioning

https://appbrewery.github.io/css-positioning/

static positioning
In this case this is just what default html does when add anter items
it just goes at the bottom of whatever previous there

relative positioning
positioning relative to default position
relative position takes the static position and then you can move it relativeto that location
Now, remember, relative does not mean relativeto anything else 

absolute position
position relativeto nearest positioned ancestor or top left cornr go webpage

fixed positioning
position relativeto top left cornrof browser window
<<<<<<< HEAD

-------------------------------------------------------------

In CSS, **positioning** defines how an element is placed in a document's layout. There are four common types of positioning: **static**, **relative**, **absolute**, and **fixed**. Each behaves differently in terms of how the element is positioned on the page.

### 1. **Static Positioning**
- **Default positioning**: Every element is positioned according to the normal document flow.
- **Behavior**: The element is placed based on the flow of the HTML content. It **does not respond** to positioning properties like `top`, `left`, `bottom`, or `right`.
- **Usage**: By default, all elements are statically positioned unless you change their `position` property.

  **Example:**
  ```css
  div {
    position: static;
  }
  ```

### 2. **Relative Positioning**
- **Position relative to itself**: The element remains in the normal document flow, but you can adjust its position using `top`, `left`, `bottom`, or `right` relative to its **original position**.
- **Behavior**: The element will be moved relative to where it would have been if it were static. This movement does not affect other elements.
- **Usage**: Useful for fine-tuning the placement of an element without breaking the layout flow.

  **Example:**
  ```css
  div {
    position: relative;
    top: 20px;
    left: 10px;
  }
  ```
  In this example, the `div` will be moved 20px down and 10px to the right, but it still occupies its original space in the document.

### 3. **Absolute Positioning**
- **Position relative to the nearest positioned ancestor**: The element is removed from the normal document flow and positioned relative to its closest ancestor that has a `position` value of `relative`, `absolute`, or `fixed`. If no such ancestor exists, it will be positioned relative to the **initial containing block** (usually the browser window).
- **Behavior**: Other elements will not be affected by its position, and it won't occupy space in the normal flow.
- **Usage**: Great for positioning elements in specific places without affecting the layout around them.

  **Example:**
  ```css
  div {
    position: absolute;
    top: 50px;
    left: 100px;
  }
  ```
  In this example, the `div` will be positioned 50px from the top and 100px from the left of its nearest positioned ancestor or the window.

### 4. **Fixed Positioning**
- **Position relative to the viewport (browser window)**: The element is removed from the normal document flow and positioned relative to the **browser window**, meaning it stays in the same place even when the page is scrolled.
- **Behavior**: The element does not move when you scroll the page, and like `absolute`, it does not affect the layout of other elements.
- **Usage**: Typically used for creating sticky headers, footers, or sidebars that stay in place as you scroll.

  **Example:**
  ```css
  div {
    position: fixed;
    top: 0;
    left: 0;
  }
  ```
  In this example, the `div` will be fixed at the top-left corner of the viewport and will stay there even when the page is scrolled.

---

### Summary:
- **Static**: Default behavior, no special positioning.
- **Relative**: Positioned relative to its original place, but still part of the normal flow.
- **Absolute**: Positioned relative to its nearest ancestor (or the window) and removed from the normal flow.
- **Fixed**: Positioned relative to the viewport and removed from the flow; does not move when scrolling.

Would you like an example showing how these work together?
=======
>>>>>>> 8295436eb7eb356c4cf6b67fe9b6f4819dcdf5ae
